{"version":3,"sources":["components/layout/NavLinks.js","components/layout/Navbar.js","components/movies/MovieSummary.js","components/movies/MovieList.js","components/dashboard/Dashboard.js","components/movies/MovieDetails.js","components/movies/MovieQuery.js","components/movies/CreateMovie.js","store/actions/movieActions.js","components/next/Next.js","App.js","serviceWorker.js","store/reducers/movieReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["NavLinks","react_default","a","createElement","className","react_router_dom","to","Navbar","layout_NavLinks","MovieSummary","_ref","movie","title","year","chooser","MovieList","movies","console","log","map","id","key","movies_MovieSummary","Dashboard","this","props","movies_MovieList","Component","compose","connect","state","firestore","ordered","firestoreConnect","collection","orderBy","MovieDetails","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","conditionallyRenderContent","isLoaded","createdAt","seconds","src","concat","image","fetchData","bind","assertThisInitialized","nextProps","_this2","fetch","then","res","json","result","setState","Poster","Title","ownProps","match","params","data","CreateMovie","handleChange","e","target","value","defineProperty","handleSubmit","preventDefault","createMovie","history","push","onSubmit","htmlFor","type","onChange","dispatch","getState","getFirebase","getFirestore","add","objectSpread","Date","catch","err","Next","nextChooser","leftToChoose","handleClick","nameArray","slice","randomNumber","Math","floor","random","length","selectedChooser","splice","previousState","currentProps","updateNext","style","listStyle","onClick","_ref2","doc","set","App","layout_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","initState","movieReducer","arguments","undefined","action","rootReducer","combineReducers","firestoreReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d00983a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n    <li><NavLink to=\"/next\">Who's Next?</NavLink></li>\r\n      <li><NavLink to=\"/create\">Add Movie</NavLink></li>\r\n      <li><NavLink to=\"/\" className=\"\">Home</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavLinks from './NavLinks';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <NavLinks />\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n// <Link to=\"/\" className=\"logo\">m</Link>\r\n","import React from 'react';\r\n\r\nconst MovieSummary = ({movie}) => {\r\n  return (\r\n\r\n    <div className=\"card z-depth-0 movie-summary\">\r\n          <div className=\"card-content grey-text text-darken-3\">\r\n            <div>{movie.title}</div>\r\n            <div>{movie.year}</div>\r\n            <div>{movie.chooser}</div>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default MovieSummary;","import React from 'react';\r\nimport MovieSummary from './MovieSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieList = ({movies}) => {\r\n  console.log(movies);\r\n  return (\r\n    <div className=\"movieList section\">\r\n      {movies && movies.map(movie => {\r\n        return (\r\n          <Link to={'/movie/' + movie.id} key={movie.id}>\r\n          <MovieSummary movie={movie} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieList;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport MovieList from '../movies/MovieList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass Dashboard extends Component{\r\n\r\n  \r\n  render(){\r\n    const { movies } = this.props;\r\n    \r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <MovieList movies={movies}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movies: state.firestore.ordered.movies\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'movies', orderBy: ['year', 'desc'] }\r\n  ])\r\n)(Dashboard);","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Link } from 'react-router-dom';\r\nimport MovieQuery from '../movies/MovieQuery';\r\n\r\nclass MovieDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      image: '', \r\n      title: ''\r\n    };\r\n    this.fetchData = this.fetchData.bind(this)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    console.log(nextProps.movie.title);\r\n    this.fetchData(nextProps.movie);\r\n    \r\n  }\r\n  \r\n  fetchData(movie){\r\n    fetch(`http://www.omdbapi.com/?t=${movie.title}&y=${movie.year}&apikey=102a2cf2`)\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          image: result.Poster,\r\n          title: result.Title\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n    conditionallyRenderContent = () => {\r\n      const movie = this.props.movie\r\n      if(this.state.isLoaded){\r\n        return (\r\n          <div className=\"container section movie-details\">\r\n          <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n          <span className=\"card-title\">{this.state.title}</span>\r\n          <p>Chosen by: {movie.chooser}</p>\r\n          <p>Viewing Date: {movie.createdAt.seconds}</p>\r\n          </div>\r\n          <img src={`${this.state.image}`} />\r\n          <div className=\"card-action grey lighten-4\">\r\n          <p>Release Year: {movie.year}</p>\r\n          <Link to=\"/\">Home</Link>\r\n          </div>\r\n          </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"container center\">\r\n          <p>Loading movie details...</p>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    render(){\r\n      return(\r\n        <div>\r\n          {this.conditionallyRenderContent()}\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const movies = state.firestore.data.movies;\r\n  const movie = movies ? movies[id] : null;\r\n  return {\r\n    movie: movie\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'movies'}\r\n  ])\r\n)(MovieDetails);\r\n","import React, { Component } from 'react';\r\n\r\nclass MovieQuery extends Component {\r\n  movieQuery(title, year){\r\n    return new Promise(function(resolve, reject) {\r\n      let request = new XMLHttpRequest();\r\n      let url = `http://www.omdbapi.com/?t=${title}&y=${year}&apikey=102a2cf2`;\r\n      request.onload = function() {\r\n        if (this.status === 200){\r\n          resolve(request.response);\r\n        } else {\r\n          reject(Error(request.statusText));\r\n        }\r\n      }\r\n      request.open(\"GET\", url, true);\r\n      request.send();\r\n    });\r\n  }\r\n}\r\n\r\nexport default MovieQuery","import React, { Component } from 'react';\r\nimport { createMovie } from '../../store/actions/movieActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CreateMovie extends Component {\r\n    state = {\r\n        title: '',\r\n        year: 0, \r\n        chooser: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      console.log(e.target.value);\r\n      this.setState({\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.createMovie(this.state);\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Add Movie to Archive:</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"year\">Year</label>\r\n                        <input id=\"year\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"chooser\">Chooser</label>\r\n                        <input id=\"chooser\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    \r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Add Movie</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createMovie: (movie) => dispatch(createMovie(movie))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateMovie)\r\n","export const createMovie = (movie) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore.collection('movies').add({\r\n      ...movie,\r\n      createdAt: new Date()\r\n    }).then(()=> {\r\n      dispatch({ type: 'CREATE_MOVIE', movie });\r\n    }).catch((err)=> {\r\n      dispatch({ type: 'CREATE_MOVIE_ERROR', err})\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateNext = (chooser) => {\r\n  console.log(chooser);\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    console.log('action: ' + chooser);\r\n    firestore.collection('nextChooser').doc('fPDChgaiSVrAnr9s4boD').set({\r\n      nextChooser: chooser.nextChooser,\r\n      leftToChoose: chooser.leftToChoose\r\n    }).then(() => {\r\n      dispatch({ type: 'UPDATE_NEXT', chooser});\r\n    }).catch((err) => {\r\n      dispatch({ type: 'UPDATE_NEXT_ERROR', err})\r\n    })\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { updateNext } from '../../store/actions/movieActions';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\n\r\nclass Next extends Component {  \r\n  state = {\r\n      nextChooser: '',\r\n      leftToChoose: [],\r\n      isLoaded: false\r\n  }\r\n  \r\n  componentWillReceiveProps(nextProps){\r\n    console.log(nextProps.nextChooser[0].leftToChoose);\r\n    this.setState({\r\n      isLoaded: true,\r\n      leftToChoose: nextProps.nextChooser[0].leftToChoose,\r\n      nextChooser: nextProps.nextChooser[0].nextChooser\r\n    })\r\n  }\r\n  \r\n  handleClick = () => {\r\n    let nameArray = this.state.leftToChoose.slice();\r\n    let randomNumber = Math.floor(Math.random() * nameArray.length);\r\n    let selectedChooser = nameArray.splice(randomNumber, 1);\r\n    console.log(selectedChooser);\r\n    \r\n    this.setState((previousState, currentProps) => {\r\n      return {\r\n        ...previousState,\r\n        leftToChoose: nameArray,\r\n        nextChooser: selectedChooser\r\n      }\r\n    })\r\n    this.props.updateNext({\r\n      nextChooser: selectedChooser,\r\n      leftToChoose: nameArray\r\n    });\r\n  }\r\n  \r\n  conditionallyRenderContent = () => {\r\n    const movie = this.props.movie\r\n    if(this.state.isLoaded){\r\n      return (\r\n        <div>\r\n          <div className=\"card\">\r\n            <h5>Left to Choose:</h5> {this.state.leftToChoose.map(function(chooser){\r\n              return (<li style={{listStyle: 'none'}}>{chooser}</li>)\r\n            })}\r\n          </div>\r\n  \r\n          <button type=\"button\" onClick={this.handleClick}>Press!</button>\r\n          <div className=\"card\">\r\n            <h1><span>{this.state.nextChooser}</span> is next!</h1>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"container center\">\r\n        <p>Loading chooser details...</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const { nextChooser } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {this.conditionallyRenderContent()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    nextChooser:  state.firestore.ordered.nextChooser\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNext: (chooser) => dispatch(updateNext(chooser))\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([\r\n    { collection: 'nextChooser' }\r\n  ])\r\n)(Next);\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport MovieDetails from './components/movies/MovieDetails';\nimport CreateMovie from './components/movies/CreateMovie';\nimport Next from './components/next/Next';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n            <Switch>\n              <Route exact path=\"/\" component={Dashboard} />\n              <Route exact path=\"/create\" component={CreateMovie} />\n              <Route exact path=\"/movie/:id\" component={MovieDetails} />\n              <Route exact path=\"/next\" component={Next} />\n            </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  movies: [\r\n        { id: '1', title: 'Wonder Boys', year: 1984  },\r\n        { id: '2', title: 'Cool Hand Luke', year: 2003 },\r\n        { id: '3', title: 'Gears and Steers', year: 1977 },\r\n        { id: '4', title: 'Wonde', year: 1955  },\r\n        { id: '5', title: 'Coo', year: 2322 },\r\n        { id: '6', title: 'Gearss', year: 1232 }\r\n    ]\r\n}\r\n\r\nconst movieReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_MOVIE':\r\n      console.log('create movie', action.movie);\r\n      return state;\r\n    case 'CREATE_MOVIE_ERROR':\r\n      console.log('create movie error', action.err);\r\n      return state;\r\n    case 'UPDATE_NEXT':\r\n      console.log('update next', action.chooser);\r\n      return state;\r\n    case 'UPDATE_NEXT_ERROR':\r\n      console.log('update next error', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default movieReducer;","import movieReducer from './movieReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\n\r\nconst rootReducer = combineReducers({\r\n  movie: movieReducer,\r\n  firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\n  var config = {\r\n    apiKey: \"AIzaSyA9Nt7o7qXlIjHq09qJFsE_JZ5o0UipytU\",\r\n    authDomain: \"movienight-d37b5.firebaseapp.com\",\r\n    databaseURL: \"https://movienight-d37b5.firebaseio.com\",\r\n    projectId: \"movienight-d37b5\",\r\n    storageBucket: \"movienight-d37b5.appspot.com\",\r\n    messagingSenderId: \"1026029285619\"\r\n  };\r\n  \r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true});\r\n  \r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig)\n  )\n);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}